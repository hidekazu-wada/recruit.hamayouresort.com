---
import { mainNavigation } from '@data/navigation';

interface Props {
  type?: 'header' | 'mobile';
  className?: string;
}

const { type = 'header', className = '' } = Astro.props;
const currentPath = Astro.url.pathname;

// 現在のページ判定を改善
function isCurrentPage(url: string) {
  // トップページの場合
  if (url === '/' && currentPath === '/') return true;
  // その他のページの場合
  if (url !== '/' && currentPath.startsWith(url)) return true;
  return false;
}
---

<nav class={`navigation ${type} ${className}`}>
  <ul class="menu-list">
    {
      mainNavigation.map((item) => (
        <li class="menu-item">
          <a
            href={item.url}
            aria-current={isCurrentPage(item.url) ? 'page' : undefined}
            class={isCurrentPage(item.url) ? 'is-active' : ''}
          >
            {item.label}
          </a>
        </li>
      ))
    }
  </ul>
</nav>

<style lang="scss">
  @import '@styles/functions.scss';
  @import '@styles/mixins.scss';

  nav {
    ul {
      li {
        a {
          display: block;
          color: #fff;
          font-size: spx(16);
          font-weight: 500;
          line-height: 140%;
          position: relative;

          @include tablet-up {
            font-size: spx(16) * 0.75;
          }

          @include desktop-up {
            font-size: ppx(16);
            font-weight: 400;
            line-height: normal;
            letter-spacing: ppx(0.32);
          }
          &::after {
            content: '';
            display: block;
            position: absolute;
            left: 0;
            bottom: -4px;
            width: 100%;
            height: 1px;
            background: white;
            transform: scaleX(0);
            transform-origin: left;
            transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            opacity: 1;
            @include desktop-up {
              background-color: #054965;
            }
          }
          // ホバー時に下線が左から右へ
          @include hover {
            &:hover::after {
              transform: scaleX(1);
            }
          }
          &:focus-visible::after {
            transform: scaleX(1);
          }

          // 現在ページの下線表示を強化
          &[aria-current='page'],
          &.is-active {
            &::after {
              transform: scaleX(1) !important;
              opacity: 1;
            }
          }
        }
      }
    }
    /* タイプ別のスタイル */
    &.header {
      display: none;
      @include desktop-up {
        display: block;
      }
      ul {
        @include desktop-up {
          display: flex;
          gap: ppx(20);
        }
        li {
          a {
            color: #054965;
          }
        }
      }
    }

    &.mobile {
      display: block;
      @include desktop-up {
        display: none;
      }
      ul {
        display: flex;
        flex-direction: column;
        gap: spx(20);
        width: max-content;
        margin-inline: auto;
        @include tablet-up {
          display: grid;
          grid-template-columns: 1fr 1fr;
          gap: spx(20 * 0.75) 15vw;
        }
        li {
          text-align: center;
          @include tablet-up {
            text-align: left;
          }
          a {
          }
        }
      }
    }
  }
</style>
