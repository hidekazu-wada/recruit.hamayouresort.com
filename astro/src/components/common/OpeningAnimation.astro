---
import { checkFirstVisit, dispatchOpeningComplete } from '@utils/session';
---

<div id="opening-animation" class="opening-animation">
  <div class="opening-content">
    <img
      src="/hamayou-logo-white.svg"
      alt="HAMAYOUリゾート"
      class="company-logo"
    />
    <p class="message">一歩踏み出す</p>
  </div>
</div>

<style lang="scss">
  @import '@styles/functions';
  @import '@styles/mixins';

  .opening-animation {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    background-image: url('/opening.webp');
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    z-index: 9999;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .opening-content {
    text-align: center;
  }

  .company-logo {
    width: spx(300);
    height: auto;
    @include tablet-up {
      width: spx(300) * 0.75;
    }
    @include desktop-up {
      width: ppx(300);
    }
  }

  .message {
    margin-top: 1em;
    font-size: spx(12);
    color: white;
    font-weight: 500;
    @include tablet-up {
      font-size: spx(12) * 0.75;
    }
    @include desktop-up {
      font-size: ppx(12);
    }
  }
</style>

<script>
  // @ts-ignore
  import { gsap } from 'gsap';
  import { checkFirstVisit, dispatchOpeningComplete } from '@utils/session';

  // windowオブジェクトの型定義を拡張
  declare global {
    interface Window {
      resetOpeningState: () => void;
    }
  }

  // デバッグ用の関数
  function debugState() {
    const hasVisited = localStorage.getItem('hasVisited');
    const currentPath = window.location.pathname;
    const lastPath = localStorage.getItem('lastPath');
    console.log('Debug - Current state:', {
      hasVisited,
      currentPath,
      lastPath,
      timestamp: new Date().toISOString(),
    });
  }

  // ページ読み込み完了時に実行
  window.addEventListener('load', () => {
    debugState();

    // 初回訪問時のみアニメーションを実行
    if (!localStorage.getItem('hasVisited')) {
      console.log('First visit detected - Starting animation');
      const opening = document.getElementById('opening-animation');
      const logo = opening?.querySelector('.company-logo');
      const message = opening?.querySelector('.message');

      if (!opening || !logo || !message) {
        console.error('Required elements not found');
        return;
      }

      // ローカルストレージに値を設定
      localStorage.setItem('hasVisited', 'true');
      localStorage.setItem('lastPath', window.location.pathname);
      debugState();

      // アニメーションの設定
      const tl = gsap.timeline({
        onComplete: () => {
          console.log('Opening animation completed');
          // アニメーション完了後に要素を削除
          opening.remove();
          // オープニング完了イベントを発火
          dispatchOpeningComplete();
        },
      });

      // アニメーションシーケンス
      tl.from(logo, {
        opacity: 0,
        y: 0,
        duration: 1,
        ease: 'power3.out',
      })
        .from(
          message,
          {
            opacity: 0,
            y: 5,
            duration: 1.6,
            ease: 'power2.out',
          },
          '+=1'
        )
        .to(opening, {
          opacity: 0,
          duration: 0.8,
          delay: 1,
          ease: 'power2.inOut',
        });
    } else {
      console.log('Not first visit - Skipping animation');
      // 初回訪問でない場合は要素を即時削除
      const opening = document.getElementById('opening-animation');
      if (opening) {
        opening.remove();
      }
      // オープニング完了イベントを発火
      dispatchOpeningComplete();
    }
  });

  // ページ遷移時に実行
  document.addEventListener('astro:before-swap', () => {
    console.log('Page transition detected');
    debugState();
  });

  // デバッグ用：コンソールから状態をリセットできるようにする
  window.resetOpeningState = () => {
    localStorage.removeItem('hasVisited');
    localStorage.removeItem('lastPath');
    console.log('Opening state has been reset');
    debugState();
  };
</script>
