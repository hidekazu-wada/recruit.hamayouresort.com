---

---

<div class="holidays-chart fadein-up">
  <h3 class="holidays-chart__title">‰ºëÊó•„Éª‰ºëÊöá„Éá„Éº„Çø</h3>
  
  <div class="holidays-chart__grid">
    <!-- Âπ¥Èñì‰ºëÊó• -->
    <div class="holidays-chart__item">
      <h4 class="holidays-chart__label">Âπ¥Èñì‰ºëÊó•</h4>
      <div class="holidays-chart__annual">
        <div class="holidays-chart__annual-number">120</div>
        <div class="holidays-chart__annual-unit">Êó•</div>
        <div class="holidays-chart__annual-bar">
          <div class="holidays-chart__annual-progress" data-progress="32.88"></div>
        </div>
        <div class="holidays-chart__annual-scale">
          <span>0</span>
          <span>365Êó•</span>
        </div>
      </div>
    </div>

    <!-- ÊúâÁµ¶ÂèñÂæóÁéá -->
    <div class="holidays-chart__item">
      <h4 class="holidays-chart__label">ÊúâÁµ¶ÂèñÂæóÁéá</h4>
      <div class="holidays-chart__circle-wrapper">
        <svg class="holidays-chart__circle" viewBox="0 0 200 200">
          <circle class="holidays-chart__circle-bg" cx="100" cy="100" r="80" />
          <circle class="holidays-chart__circle-progress" cx="100" cy="100" r="80" data-percent="99" />
        </svg>
        <div class="holidays-chart__circle-text">99%</div>
      </div>
    </div>

    <!-- Â∏åÊúõ‰ºëÂèñÂæóÁéá -->
    <div class="holidays-chart__item">
      <h4 class="holidays-chart__label">Â∏åÊúõ‰ºëÂèñÂæóÁéá</h4>
      <div class="holidays-chart__circle-wrapper">
        <svg class="holidays-chart__circle" viewBox="0 0 200 200">
          <circle class="holidays-chart__circle-bg" cx="100" cy="100" r="80" />
          <circle class="holidays-chart__circle-progress holidays-chart__circle-progress--secondary" cx="100" cy="100" r="80" data-percent="95" />
        </svg>
        <div class="holidays-chart__circle-text">95%</div>
      </div>
    </div>

    <!-- ÈÄ£‰ºëÂèñÂæóÂÆüÁ∏æ -->
    <div class="holidays-chart__item holidays-chart__item--full">
      <h4 class="holidays-chart__label">ÈÄ£‰ºëÂèñÂæóÂÆüÁ∏æ</h4>
      <div class="holidays-chart__consecutive">
        <div class="holidays-chart__consecutive-max">
          <span class="holidays-chart__consecutive-number">9</span>
          <span class="holidays-chart__consecutive-text">ÈÄ£‰ºëÂèñÂæó‰æã„ÅÇ„Çä</span>
        </div>
        <div class="holidays-chart__consecutive-examples">
          <div class="holidays-chart__consecutive-example">
            <span class="holidays-chart__consecutive-icon">üèñÔ∏è</span>
            <span>Â§èÂ≠£‰ºëÊöá: ÊúÄÂ§ß9ÈÄ£‰ºë</span>
          </div>
          <div class="holidays-chart__consecutive-example">
            <span class="holidays-chart__consecutive-icon">üéç</span>
            <span>Âπ¥Êú´Âπ¥Âßã: ÊúÄÂ§ß7ÈÄ£‰ºë</span>
          </div>
          <div class="holidays-chart__consecutive-example">
            <span class="holidays-chart__consecutive-icon">üå∏</span>
            <span>GW: ÊúÄÂ§ß5ÈÄ£‰ºë</span>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<style lang="scss">
  @import "@styles/variables.scss";
  @import "@styles/functions.scss";
  @import "@styles/mixins.scss";

  .holidays-chart {
    &__title {
      font-size: spx(24);
      font-weight: bold;
      color: #1e88e5;
      text-align: center;
      margin-bottom: spx(32);

      @include tablet-up {
        font-size: spx(24) * 0.75;
        margin-bottom: spx(32) * 0.75;
      }
      
      @include desktop-up {
        font-size: ppx(32);
        margin-bottom: ppx(48);
      }
    }

    &__grid {
      display: grid;
      grid-template-columns: 1fr;
      gap: spx(32);

      @include tablet-up {
        grid-template-columns: 1fr 1fr;
        gap: spx(32) * 0.75;
      }

      @include desktop-up {
        grid-template-columns: 1fr 1fr 1fr;
        gap: ppx(48);
      }
    }

    &__item {
      background: white;
      border-radius: 12px;
      padding: spx(32);
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      min-height: spx(280);
      min-width: spx(280);
      display: flex;
      flex-direction: column;

      @include tablet-up {
        padding: spx(32) * 0.75;
        min-height: spx(280) * 0.75;
        min-width: spx(280) * 0.75;
      }
      
      @include desktop-up {
        padding: ppx(40);
        min-height: ppx(320);
        min-width: ppx(320);
      }

      &--full {
        min-height: auto;
        
        @include tablet-up {
          grid-column: 1 / -1;
        }

        @include desktop-up {
          grid-column: 1 / -1;
        }
      }
    }

    &__label {
      font-size: spx(18);
      font-weight: bold;
      color: #333;
      margin-bottom: spx(16);
      text-align: center;
      
      @include tablet-up {
        font-size: spx(18) * 0.75;
        margin-bottom: spx(16) * 0.75;
      }
      
      @include desktop-up {
        font-size: ppx(20);
        margin-bottom: ppx(24);
      }
    }

    /* Âπ¥Èñì‰ºëÊó•„ÅÆ„Çπ„Çø„Ç§„É´ */
    &__annual {
      text-align: center;
    }

    &__annual-number {
      font-size: spx(48);
      font-weight: bold;
      color: #1e88e5;
      display: inline-block;
      
      @include tablet-up {
        font-size: spx(48) * 0.75;
      }
      
      @include desktop-up {
        font-size: ppx(64);
      }
    }

    &__annual-unit {
      font-size: spx(24);
      color: #333;
      display: inline-block;
      margin-left: spx(8);
      
      @include tablet-up {
        font-size: spx(24) * 0.75;
        margin-left: spx(8) * 0.75;
      }
      
      @include desktop-up {
        font-size: ppx(32);
        margin-left: ppx(8);
      }
    }

    &__annual-bar {
      width: 100%;
      height: spx(20);
      background: #f0f0f0;
      border-radius: 10px;
      margin: spx(16) 0;
      position: relative;
      overflow: hidden;
      
      @include tablet-up {
        height: spx(20) * 0.75;
        margin: spx(16) * 0.75 0;
      }
      
      @include desktop-up {
        height: ppx(24);
        margin: ppx(24) 0;
      }
    }

    &__annual-progress {
      position: absolute;
      left: 0;
      top: 0;
      height: 100%;
      width: 0;
      background: linear-gradient(90deg, #1e88e5 0%, #00acc1 100%);
      border-radius: 10px;
      transition: width 1.5s ease-out;
    }

    &__annual-scale {
      display: flex;
      justify-content: space-between;
      font-size: spx(14);
      color: #666;
      
      @include tablet-up {
        font-size: spx(14) * 0.75;
      }
      
      @include desktop-up {
        font-size: ppx(14);
      }
    }

    /* ÂÜÜ„Ç∞„É©„Éï„ÅÆ„Çπ„Çø„Ç§„É´ */
    &__circle-wrapper {
      position: relative;
      width: 100%;
      max-width: 160px;
      margin: 0 auto;
      flex: 1;
      display: flex;
      align-items: center;
      justify-content: center;
      
      @include tablet-up {
        max-width: 140px;
      }
      
      @include desktop-up {
        max-width: 180px;
      }
    }

    &__circle {
      width: 100%;
      height: 100%;
      transform: rotate(-90deg);
      position: relative;
    }

    &__circle-bg {
      fill: none;
      stroke: #e0e0e0;
      stroke-width: 16;
    }

    &__circle-progress {
      fill: none;
      stroke: #1e88e5;
      stroke-width: 16;
      stroke-dasharray: 502.65;
      stroke-dashoffset: 502.65;
      transition: stroke-dashoffset 1.5s ease-out;
      stroke-linecap: round;

      &--secondary {
        stroke: #00acc1;
      }
    }

    &__circle-text {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      font-size: spx(32);
      font-weight: bold;
      color: #1e88e5;
      
      @include tablet-up {
        font-size: spx(32) * 0.75;
      }
      
      @include desktop-up {
        font-size: ppx(40);
      }
    }

    /* ÈÄ£‰ºëÂèñÂæóÂÆüÁ∏æ„ÅÆ„Çπ„Çø„Ç§„É´ */
    &__consecutive {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: spx(32);

      @include tablet-up {
        flex-direction: row;
        justify-content: space-around;
        gap: spx(32) * 0.75;
      }
      
      @include desktop-up {
        gap: ppx(48);
      }
    }

    &__consecutive-max {
      text-align: center;
    }

    &__consecutive-number {
      font-size: spx(48);
      font-weight: bold;
      color: #00acc1;
      display: block;
      
      @include tablet-up {
        font-size: spx(48) * 0.75;
      }
      
      @include desktop-up {
        font-size: ppx(64);
      }
    }

    &__consecutive-text {
      font-size: spx(16);
      color: #333;
      display: block;
      margin-top: spx(8);
      
      @include tablet-up {
        font-size: spx(16) * 0.75;
        margin-top: spx(8) * 0.75;
      }
      
      @include desktop-up {
        font-size: ppx(18);
        margin-top: ppx(8);
      }
    }

    &__consecutive-examples {
      display: flex;
      flex-direction: column;
      gap: spx(16);
      
      @include tablet-up {
        gap: spx(16) * 0.75;
      }
      
      @include desktop-up {
        gap: ppx(20);
      }
    }

    &__consecutive-example {
      display: flex;
      align-items: center;
      gap: spx(8);
      font-size: spx(16);
      color: #333;
      
      @include tablet-up {
        gap: spx(8) * 0.75;
        font-size: spx(16) * 0.75;
      }
      
      @include desktop-up {
        gap: ppx(8);
        font-size: ppx(18);
      }
    }

    &__consecutive-icon {
      font-size: spx(24);
      
      @include tablet-up {
        font-size: spx(24) * 0.75;
      }
      
      @include desktop-up {
        font-size: ppx(28);
      }
    }
  }
</style>

<script>
  // „Éó„É≠„Ç∞„É¨„Çπ„Éê„Éº„ÅÆ„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥
  const progressBar = document.querySelector('.holidays-chart__annual-progress') as HTMLElement;
  if (progressBar) {
    const progress = progressBar.dataset.progress || '0';
    setTimeout(() => {
      progressBar.style.width = `${progress}%`;
    }, 100);
  }

  // ÂÜÜ„Ç∞„É©„Éï„ÅÆ„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥
  const circles = document.querySelectorAll('.holidays-chart__circle-progress');
  circles.forEach((circle) => {
    const svgCircle = circle as SVGCircleElement;
    const percent = parseInt(svgCircle.dataset.percent || '0');
    const circumference = 2 * Math.PI * 80; // r=80
    const offset = circumference - (percent / 100) * circumference;
    
    setTimeout(() => {
      svgCircle.style.strokeDashoffset = offset.toString();
    }, 100);
  });
</script>